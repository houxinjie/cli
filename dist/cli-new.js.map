{"version":3,"file":"cli-new.js","sourceRoot":"","sources":["../src/cli-new.ts"],"names":[],"mappings":";;AAEA,IAAY,SAAS,WAAM,WAC3B,CAAC,CADqC;AACtC,IAAY,IAAI,WAAM,MACtB,CAAC,CAD2B;AAC5B,IAAY,KAAK,WAAM,OACvB,CAAC,CAD6B;AAC9B,8BAAmB,eACnB,CAAC,CADiC;AAClC,mBAAyB,IACzB,CAAC,CAD4B;AAC7B,IAAO,GAAG,WAAW,KAAK,CAAC,CAAA;AAE3B,IAAM,cAAc,GAAW,mDAAmD,CAAA;AAElF,SAAS;KACJ,KAAK,CAAC,eAAe,CAAC,CAAA;AAE3B,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAA;AAE7B,EAAE,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;IAC5B,SAAS,CAAC,IAAI,EAAE,CAAA;IAChB,OAAO,CAAC,IAAI,EAAE,CAAA;AAClB,CAAC;AAED,IAAM,WAAW,GAAW,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;AAC7C,IAAM,WAAW,GAAW,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAA;AAErD,EAAE,CAAC,CAAC,eAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IAC1B,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,kCAAkC,CAAC,CAAC,CAAA;IAC1D,OAAO,CAAC,IAAI,EAAE,CAAA;AAClB,CAAC;AAED,IAAM,GAAG,GAAW,eAAa,cAAc,SAAI,WAAW,mBAAc,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,MAAM,CAAG,CAAA;AAC5G,IAAM,OAAO,GAAQ,GAAG,CAAC,sBAAsB,CAAC,CAAA;AAChD,OAAO,CAAC,KAAK,EAAE,CAAA;AAEf,oBAAI,CAAC,GAAG,EAAE,UAAC,KAAK,EAAE,MAAM,EAAE,QAAQ;IAE9B,OAAO,CAAC,IAAI,EAAE,CAAA;IAEd,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QACR,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAA;QAClB,OAAO,CAAC,IAAI,EAAE,CAAA;IAClB,CAAC;IAED,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,+BAA+B,CAAC,CAAC,CAAA;IACzD,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAA;IAC7B,OAAO,CAAC,GAAG,EAAE,CAAA;IACb,OAAO,CAAC,GAAG,CAAC,QAAM,WAAa,CAAC,CAAA;IAChC,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAA;IAC1B,OAAO,CAAC,IAAI,EAAE,CAAA;AAClB,CAAC,CAAC,CAAA","sourcesContent":["#!/usr/bin/env node\n\nimport * as commander from 'commander'\nimport * as path from 'path'\nimport * as chalk from 'chalk'\nimport {exec} from 'child_process'\nimport {existsSync} from 'fs'\nimport ora = require('ora')\n\nconst projectSeedUrl: string = 'https://github.com/alonewalked/vue-vuex-2-cli.git'\n\ncommander\n    .usage('<projectName>')\n\ncommander.parse(process.argv)\n\nif (commander.args.length < 1) {\n    commander.help()\n    process.exit()\n}\n\nconst projectName: string = commander.args[0]\nconst projectPath: string = path.resolve(projectName)\n\nif (existsSync(projectPath)) {\n    console.log(chalk.red('Target directory already exists.'))\n    process.exit()\n}\n\nconst cmd: string = `git clone ${projectSeedUrl} ${projectName} && rm -rf ${path.join(projectPath, '.git')}`\nconst spinner: any = ora('downloading template')\nspinner.start()\n\nexec(cmd, (error, stdout, stderror) => {\n\n    spinner.stop()\n\n    if (error) {\n        console.log(error)\n        process.exit()\n    }\n\n    console.log(chalk.green('âˆš Project generation success.'))\n    console.log('To get started')\n    console.log()\n    console.log(`cd ${projectName}`)\n    console.log('npm install')\n    process.exit()\n})\n"]}